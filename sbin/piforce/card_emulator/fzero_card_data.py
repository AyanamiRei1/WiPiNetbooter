#!/usr/bin/env python3
import struct
import codecs
import sys
import os
import random
import shutil
import csv

fontdict = {}

with open('/var/log/printdata/fzfontslots', newline='') as csvfile:
    fontreader = csv.reader(csvfile, delimiter=',')
    for row in fontreader:
        fontdict[row[0]] = row[1]

printrefdict = {'07FFE078001E83FFC1BDB6FDB1B6F9BBB6CDB5B6CDB5B6F9B19CC5B19CC5BD9CFD83FFC178001E5FFFFA6B00D65500AA6B00D65500AA6B00D65500AA6B00D65500AA6B00D67FFFFE':'a','0000000000000000000000000000000000007E7E7E7E7E7E0606060E0E0E1C1C1C181818181818181818000000000000000000000000000000000000000000000000000000000000':'b','00820040860020C41818EE300CEEE006FFC007FFC657E7FC3FE7F81FE7F00FE7F007E7F81FE7FFFFE7F817E7F007E7F00FE7F81FFFDC1DFF8621FFC0419CE0018C30010808020800':'c','0000000000000000000000000000000000007E3C3C7E7E7E6066667C66667E66660666667E7E7E7C3C3C000000000000000000000000000000000000000000000000000000000000':'d','007E00018180067E60098190127E4825E7A44B67D256E7EAA1C3E5A80015AAAAF5AB55F5ABABF5AB95F5AF1AF5A73DE5567E6A4BFFD225FFA4127E48098190067E60018180007E00':'e','7FFFFE7FFFFE32802C3FFFFC7FFFFEFFC3FFDF81FBDF3CFBDF3FFBDF83FBDFC1FBDFFCFB7F3CFE3F81FC0FC3F00FFFF007FFE003FFC000D300007E00007E0000D30007FFE00DBDB0':'f','01FF802324C46524A6A524A5A90095A8FF15998199813C81C342C37FBDFE3F66FC014E800156803D7EBC43BDC2814281993C99B9819DB8FF1DAD00B56524A62724E403FFC001FF80':'g','00FF000381C00E7E7019E798373CEC2C24346A3C5659249AD0BD0BB0660DBFC3FDAA8155AA8155BFC3FDB0660DD0BD0B59249A6A3C562C2434373CEC19E7980E7E700381C000FF00':'h','00820040860020C41818EE300CEEE006FFC007FFC657C3FC3F81F81F99F00F3CF0073CF81F00FFFF00F8173CF0073CF00F3CF81FFFDC1DFF8621FFC0419CE0018C30010808020800':'i','00FF000381C00E3C7018C318333CCC24C3246900964A0052D4FF2B94FF29A8C315A80715A80E15A81C15941829D4182B4A185269009624C324333CCC18C3180E3C700381C000FF00':'j','7FFFFE7FFFFE32802C3FFFFC7FFFFEFF81FFDF00FBDF3CFBDF3CFBDF00FBDF00FBDF3CFB7F3CFE3F3CFC0F3CF00FFFF007FFE003FFC000D300007E00007E0000D30007FFE00DBDB0':'k','03FFC00C003010000821FF8447FFE24F3CF29E42799C813994812994C3298C7E314A3C524700E223FFC430FF0C38001C2F00F413FFC808FF120700E204FF0402003801FFE000FF80':'l','00FF000381C00E7E7019C398373CEC2CFF346BFFD65B00DAD700EBB73FEDAF3FF5AF01F5AF00F5AFFCF5B73CEDD700EB5B81DA6BFFD62CFF34373CEC19C3980E7E700381C000FF00':'m','00820040860020C41818EE300CEEE006FFC007FFC657C3FC3F81F81F99F00F3CF0073CF81F00FFFF00F8173CF0073CF00F3CF81FFFDC1DFF8621FFC0419CE0018C30010808020800':'n','07FFE078001E87FFE1B8421DA03C05A318C5A4993DA7F93DA418C5A33C05B8421D87FFE178001E7FFFEA7F00D67F00AA7F00D67F00AA7F00D67F00AA7F00D67F00AA7F00D67FFFFE':'o','00820040860020C41818EE300CEEE006FFC007FFC65724FC3F00F81F00F00F24F00724F81F24FFFF24F81724F00724F00F24F81FFFDC1DFF8621FFC0419CE0018C30010808020800':'p','0000003FFFFC6000064FFFF250000A53FFCA54002A54002A55DB2A55DB2A54DB2A54DB2A54DFAA54DFAA54C32A54C32A54002A54002A53FFCA50000A4FFFF26000067FFFFE3FFFFC':'q','0F00F010C3082F24F45F99FA6EC376114288112488912489DF24FBAE24759042094F81F22000041F3CF8027E4004C32004BD200542A00542A00542A0053CA002BD4001428000C300':'r','0000003FFFFC6000064FFFF250000A53FFCA54002A54002A55DFAA55DFAA54D82A54DF2A54DFAA54C1AA54DFAA54DF2A54002A54002A53FFCA50000A4FFFF26000067FFFFE3FFFFC':'s','0000000000000000000000000000000000007C7E3C7E7E7E0660663E7C667C7E666006667E7E7E7E7C3C000000000000000000000000000000000000000000000000000000000000':'t','000000000000000000000000000000000000038780038FC0018CC0018CC0018CC0018CC0018FC0018780000000000000000000000000000000000000000000000000000000000000':'u','00FF000381C00E3C7018C318333CCC24C3246900964A7E52D4FF2B94C329A8C315A8FF15A8FF15A8C31594C329D4FF2B4A7E5269009624C324333CCC18C3180E3C700381C000FF00':'v','00FF000381C00E3C7018C318333CCC24C3246900964A7E52D4FF2B94C329A8C315A8FF15A87F15A8031594C329D4FF2B4A7E5269009624C324333CCC18C3180E3C700381C000FF00':'w','60180690240990240960180671FF8E57E7EA5FC3FA4F81F240180270240E4924924AA5527ABD5E7399CE3FFFFC3FFFFC2000043FFFFC2000047FFFFE4924924924927FFFFE7FFFFE':'x','00000000000000000000000000000000000038787838FCFC18CCCC18CCCC18CCCC18CCCC18FCFC187878000000000000000000000000000000000000000000000000000000000000':'y','07FFE0180218210104400002666D9AA48955A6ED55A4A955B64D59800003800003ADAAD1800001B7575D80000185DB51C00001DBB6A9800001AF55E9800001800161FFFFFFFFFFFF':'z}

def replace_line(file_name, line_num, text):
    lines = open(file_name, 'r').readlines()
    lines[line_num] = text
    out = open(file_name, 'w')
    out.writelines(lines)
    out.close()

def process_line(linedata, fontdict, printrefdict):
    iconarray = []
    line = linedata.replace('2020','')
    lookup = 0
    linesplit = line.split('1B67')
    for fontslot in linesplit:
        for k,v in fontdict.items():
            if (k == fontslot and k != ''):
                lookup = v
                break
        for k,v in printrefdict.items():
            if (lookup != 0 and lookup == k):
                printchar = v
                iconarray.append(printchar)
                lookup = 0
                break
    if iconarray:
        return ''.join(iconarray)

rawprintfile = sys.argv[1]
path = '/var/www/html/cards/fzero/'
phppath = path+os.path.basename(rawprintfile)+".php"
delta = "false"

licensestart = 22
namestart = 64
rankstart = 26
citystart = 88

if not os.path.exists(phppath) and os.path.getsize(rawprintfile) < 120:

    with open(rawprintfile,"r") as f:

        if f.read(2) == '05':
            licensestart = licensestart+2
            namestart = namestart+2
        f.seek(licensestart)
        license = f.read(38)
        f.seek(namestart)
        name = f.read(32)

    f.close()

    namestring = name.replace('2020','20')
    shiftjistext = codecs.decode(namestring,'hex')
    driver = codecs.decode(shiftjistext,'shift-jis')
    drivername = ''
    for c in driver:
        if (ord(c)>256):
            newc = chr(ord(c)-65248)
            drivername+=newc
        else:
            drivername+=c

    license = codecs.decode(license,'hex').decode()
    cardimage = random.choice(os.listdir("/var/www/html/cardimages/fzero"))
    with open("card_output","w") as fi:

        fi.write('<?php'+'\n')
        fi.write('$license="'+license+'";\n')
        fi.write('$driver="'+drivername+'";\n')
        fi.write('$rank1="";\n')
        fi.write('$rank2="";\n')
        fi.write('$rank3="";\n')
        fi.write('$rank4="";\n')
        fi.write('$rank5="";\n')
        fi.write('$mute="";\n')
        fi.write('$aero="";\n')
        fi.write('$outer="";\n')
        fi.write('$port="";\n')
        fi.write('$light="";\n')
        fi.write('$green="";\n')
        fi.write('$card="'+cardimage+'";\n')
        fi.write('?>'+'\n')

    shutil.move("./card_output", phppath)

if os.path.exists(phppath) and 120 < os.path.getsize(rawprintfile) < 320:

    phpfile = open(phppath)
    phplines = phpfile.readlines()

    with open(rawprintfile,"r") as f:

        if f.read(2) == '05':
            rankstart = rankstart+2
        f.seek(rankstart)
        rankinfo = f.read()

    f.close()

    rankraw = rankinfo.split("0D")
    rankdata = rankraw[:5]
    i = 1
    for rankline in rankdata:
        result = process_line(rankline, fontdict, printrefdict)
        if result:
            phpdata = ''.join(phplines[i+2].split('"')[1::2])+str(result)
        else:
            phpdata = ''.join(phplines[i+2].split('"')[1::2])
        replace_line(phppath, i+2, '$rank'+str(i)+'="'+phpdata+'";\n')
        i = i+1

    phpfile.close()

if os.path.exists(phppath) and os.path.getsize(rawprintfile) > 350:

    phpfile = open(phppath)
    phplines = phpfile.readlines()
    cityvalues = ['mute','aero','outer','port','light','green']

    with open(rawprintfile,"r") as f:

        if f.read(2) == '05':
            citystart = citystart+2
        f.seek(citystart)
        cityinfo = f.read()

    f.close()

    cityraw = cityinfo.split("0D")
    citydata = cityraw[:6]
    print(citydata)
    i = 0
    for cityline in citydata:
        result = process_line(cityline, fontdict, printrefdict)
        if result:
            if (result == '4'):
                phpdata = str(result)+''.join(phplines[i+8].split('"')[1::2])
            else:
                phpdata = ''.join(phplines[i+8].split('"')[1::2])+str(result)
        else:
            phpdata = ''.join(phplines[i+8].split('"')[1::2])
        replace_line(phppath, i+8, '$'+cityvalues[i]+'="'+phpdata+'";\n')
        print(phpdata)
        i = i+1

    phpfile.close()